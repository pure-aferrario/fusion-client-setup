---
- hosts: localhost
  tasks:
  - include_vars: group_vars/infrastructure.yml

  - name: Check private key exists
    stat:
      path: "{{ priv_key_file }}"
    register: result

  - name: End run if missing private key
    meta: end_play
    when: (result.stat.isreg is undefined) or (not result.stat.isreg)

  - name: Create new region(s)
    purestorage.fusion.fusion_region:
      app_id: "{{ api_client }}"
      key_file: "{{ priv_key_file }}"
      state: present # or absent
      name: "{{ item.name }}"
      display_name: "{{ item.display_name }}"
    loop: "{{ regions }}"

  - name: Create new Availability Zone(s)
    purestorage.fusion.fusion_az:
      app_id: "{{ api_client }}"
      key_file: "{{ priv_key_file }}"
      state: present # or absent
      name: "{{ item.name }}"
      display_name: "{{ item.display_name }}"
      region: "{{ item.region }}"
    loop: "{{ availability_zones }}"

  - name: Create new network interface group(s)
    purestorage.fusion.fusion_nig:
      app_id: "{{ api_client }}"
      key_file: "{{ priv_key_file }}"
      state: present # or absent
      name: "{{ item.name }}"
      display_name: "{{ item.display_name }}"
      availability_zone: "{{ item.availability_zone }}"
      region: "{{ item.region }}"
      group_type: "{{ item.group_type }}"
      mtu: "{{ item.mtu }}"
      gateway: "{{ item.gateway }}"
      prefix: "{{ item.prefix }}"
    loop: "{{ network_interface_groups }}"

  - name: Create new Storage Endpoint network(s)
    purestorage.fusion.fusion_se:
      app_id: "{{ api_client }}"
      key_file: "{{ priv_key_file }}"
      state: present # or absent
      name: "{{ item.name }}"
      display_name: "{{ item.display_name }}"
      availability_zone: "{{ item.availability_zone }}"
      gateway: "{{ item.gateway }}"
      addresses: "{{ item.address }}"
      region: "{{ item.region }}"
      network_interface_groups: "{{ item.network_interface_groups }}"
    loop: "{{ storage_endpoints }}"

  - name: Create new array(s)
    purestorage.fusion.fusion_array:
      app_id: "{{ api_client }}"
      key_file: "{{ priv_key_file }}"
      state: present # or absent
      name: "{{ item.name }}"
      display_name: "{{ item.display_name }}"
      appliance_id: "{{ item.appliance_id }}"
      host_name: "{{ item.host_name }}"
      az: "{{ item.az }}"
      hardware_type: "{{ item.hardware_type }}"
      region: "{{ item.region }}"
    loop: "{{ arrays }}"
